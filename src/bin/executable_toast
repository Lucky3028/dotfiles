#!/bin/bash

# Toast Notification Script for WSL
# Windows Subsystem for Linux (WSL) 上でWindows トースト通知を表示するスクリプト
# 
# 使用方法:
#   toast <タイトル> [説明1] [説明2] ...
#
# 例:
#   toast "Hello World"
#   toast "通知タイトル" "説明文"
#   toast "複数行の説明" "1行目" "2行目" "3行目"
#   toast "タスク完了" "ビルドが正常に完了しました"

# エラーメッセージ出力関数
error_message() {
  echo -e "\e[31m$1\e[0m"
}

# 警告メッセージ出力関数
warning_message() {
  echo -e "\e[93m$1\e[0m"
}

# WSLで実行されていなければ（PowerShellがPATHに追加されていなければ）終了
ensure_powershell() {
  if ! type pwsh.exe &> /dev/null; then
    error_message "PowerShellがPATHに追加されていません。このスクリプトはWSLでのみ実行可能です。"
    exit 1
  fi
}

# BurntToastモジュールがインストールされていなければ、モジュールをインストール
ensure_module() {
  if ! run_powershell_command "Get-Module -ListAvailable -Name BurntToast" &> /dev/null; then
    warning_message "BurntToastモジュールが見つかりません。インストールしています..."
    run_powershell_command "Install-Module -Name BurntToast"
  fi
}

validate_arguments() {
  if [ $# -eq 0 ]; then
    error_message "タイトルが指定されていません。"
    exit 1
  fi
  
  if [ -z "$1" ]; then
    error_message "タイトルが空です。"
    exit 1
  fi
}

escape_for_powershell() {
  local text="$1"
  text="${text//\'/\'\'}"
  echo "$text"
}

run_powershell_command() {
  pwsh.exe -ExecutionPolicy RemoteSigned -Command "$1"
}

main() {
  validate_arguments "$@"
  ensure_powershell
  ensure_module

  title=$(escape_for_powershell "$1")
  description=("${@:2}")

  # 説明文が入っている配列の各要素をシングルクォートで囲んでコンマ区切りに
  description_text=""
  for desc in "${description[@]}"; do
    escaped_desc=$(escape_for_powershell "$desc")
    if [ -z "$description_text" ]; then
      description_text="'$escaped_desc'"
    else
      description_text="$description_text,'$escaped_desc'"
    fi
  done

  if [ -z "$description_text" ]; then
    text_param="'$title'"
  else
    text_param="'$title',$description_text"
  fi

  run_powershell_command "New-BurntToastNotification -Text $text_param"
}

main "$@"

